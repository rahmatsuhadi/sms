// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  username  String    @unique
  name      String?
  password  String
  items     Item[]
  history   History[]
  createdAt DateTime  @default(now())
}

model Item {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  stock       Int
  createdBy   User      @relation(fields: [createdById], references: [id])
  createdById String    @db.ObjectId
  createdAt   DateTime  @default(now())
  categoryId  String    @db.ObjectId
  category    Category  @relation(fields: [categoryId], references: [id])
  history     History[]
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  item      Item[]
}

enum HistoryType {
  IN
  OUT
}

model History {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  itemId      String      @db.ObjectId
  amount      Int
  before      Int
  after       Int
  type        HistoryType
  item        Item        @relation(fields: [itemId], references: [id], onDelete: Cascade)
  createdById String      @db.ObjectId
  createdBy   User        @relation(fields: [createdById], references: [id])
  createdAt   DateTime    @default(now())
}
